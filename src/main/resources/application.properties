# MySQL Database  Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/resume?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&serverTimezone=Asia/Seoul 
spring.datasource.username=root
spring.datasource.password=root

# \uCF58\uC194\uC5D0 SQL \uCD9C\uB825 \uC5EC\uBD80
spring.jpa.show-sql=true

# DDL \uAE30\uB2A5 \uC0AC\uC6A9 \uC5EC\uBD80(create/update/create-drop/validate/none)
spring.jpa.hibernate.ddl-auto=update

# SQL \uAC00\uB3C5\uC131 \uB192\uC5EC\uC8FC\uB294 formatting \uC5EC\uBD80
spring.jpa.properties.hibernate.format_sql=true

# SQL Parameter \uD655\uC778\uC6A9
logging.level.org.hibernate.type.descriptor.sql=trace

# JPA 하이버네이트 로그 레벨 설정
logging.level.org.hibernate=info
logging.level.org.springframework=info

# Properties 파일 - Thymeleaf 설정
spring.thymeleaf.enabled=true

# thymeleaf에 대한 캐시를 남기지 않는다. cache=false 설정(운영시는 true)
spring.thymeleaf.cache=false

# templates 디렉토리에 파일이 있는지 없는지 체크, 없으면 에러를 발생시킨다.
spring.thymeleaf.check-template-location=true

# thymeleaf 참조 경로
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# 정적 리소스에 변화가 있을 때 바로 반영
spring.devtools.livereload.enabled=true